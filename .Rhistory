pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
LZ::setproxy()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
LZ::setproxy()
pkgdown::build_site()
LZ::setproxy()
pkgdown::build_site()
LZ::setproxy()
pkgdown::build_site()
pkgdown::build_site()
chooseBioCmirror()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site(devel = T)
pkgdown::build_site(devel = F)
pkgdown::build_site(devel = T)
options(pkgdown.internet = FALSE)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
install.packages("bslib")
install.packages("bslib")
pkgdown::build_home_index()
pkgdown::init_site()
vignette("LZ")
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
# devtools::clean_vignettes()
devtools::build_vignettes()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgbuild::
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::build()
install.packages("D:/LZ/LZ_1.4.7.tar.gz", repos = NULL, type = "source")
install.packages("D:/DISKD/LZ/LZ_1.4.7.tar.gz", repos = NULL, type = "source")
library(LZ)
library(LZ)
devtools::build()
devtools::install_github("ArronLZ/LZ", build_manual = T, build_vignettes = T,
upgrade = "never", force = T)
install.packages("D:/DISKD/LZ/LZ_1.4.7.tar.gz", repos = NULL, type = "source")
library(LZ)
library(LZ)
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::build()
install.packages("D:/DISKD/LZ/LZ_1.4.7.tar.gz", repos = NULL, type = "source")
library(LZ)
LZ::getGencodeV22.annot()
LZ::getGencodeV22.annot(annot = "gencode.v22.annot")
LZ::getGencodeV22.annot("gencode.v22.annot")
LZ::getGencodeV22.annot("gencode.v22.annot")
LZ::getGencodeV22.annot(annot = "gencode.v22.annot")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::build()
install.packages("D:/DISKD/LZ/LZ_1.4.7.tar.gz", repos = NULL, type = "source")
library(LZ)
LZ::getGencodeV22.annot()
a = "gencode.v22.annot"
tst <- function(a){
data(a)
}
tst(a = 'gencode.v22.annot')
tst('gencode.v22.annot')
tst <- function(...){
data(...)
}
tst('gencode.v22.annot')
tst('gencode.v22.annot')
tst <- function(...){
data(...)
}
tst('gencode.v22.annot')
tst(gencode.v22.annot)
tst <- function(...){
data(...)
}
tst(gencode.v22.annot)
data(gencode.v22.annot, package = "LZ")
data(keggpathway.gmt, package = "LZ")
data("gencode.v22.annot")
View(gencode.v22.annot)
View(gencode.v22.annot[["hugo_mRNA"]])
View(gencode.v22.annot[["gencodev22.gtf"]])
View(gencode.v22.annot[["hugo_mRNA"]])
View(gencode.v22.annot[["gencodev22"]])
head(all_anot$hugo_mRNA)
head(gencode.v22.annot$hugo_mRNA)
View(gencode.v22.annot)
head(gencode.v22.annot$gencodev22)
strsplit(gencode.v22.annot$gencodev22$id, '\\.')
sapply(strsplit(gencode.v22.annot$gencodev22$id, '\\.'), function(x) x[[1]])
sapply(strsplit(gencode.v22.annot$gencodev22$id, '\\.'), function(x) x[[1]]) %>% duplicated() %>% sum
gencode.v22.annot$gencodev22$id_s <- sapply(strsplit(gencode.v22.annot$gencodev22$id, '\\.'), function(x) x[[1]]) %>% duplicated() %>% sum
View(gencode.v22.annot[["gencodev22"]])
gencode.v22.annot$gencodev22$id_s <- sapply(strsplit(gencode.v22.annot$gencodev22$id, '\\.'), function(x) x[[1]])
View(gencode.v22.annot[["gencodev22"]])
saveRDS(gencode.v22.annot, file = "./data/gencode.v22.annot.RData")
grep('a', c('a', 'b', 'c', 'a'))
grep('a', c('a', 'b', 'c', 'aa'))
grep('a', c('a', 'b', 'c', 'aa'), value = T)
grep('a', c('a', 'b', 'c', 'aa'), fixed = T)
grep('a', c('a', 'b', 'c', 'aa'), fixed = T)
grep('a', c('a', 'ba', 'c', 'aa'), fixed = T)
which('a', c('a', 'ba', 'c', 'aa'))
which(c('a', 'ba', 'c', 'aa') == 'a')
which(c('a', 'ba', 'c', 'a') == 'a')
match('a', c('a', 'ba', 'c', 'aa'))
match('a', c('a', 'ba', 'c', 'a'))
'a' %in% c('a', 'ba', 'c', 'a')
'a' %in% c('a', 'ba', 'c', 'aa')
'a' %in% c('aa', 'ba', 'c', 'aa')
c('a', 'ba', 'c', 'aa') %in% 'a'
c('a', 'ba', 'c', 'aa') %in% 'a' %>% which()
c('a', 'ba', 'c', 'a') %in% 'a' %>% which()
which(c('a', 'ba', 'c', 'a') %in% 'a')
which(c('a', 'ba', 'c', 'a') %in% 'a')
match('a', c('a', 'ba', 'c', 'a'))
tt <- data.frame(id=c('a', 'b', 'c'), a =1:3, b=3:6, id2=c('a', 'c', 'c'),
id93 = c(T,T,F))
tt <- data.frame('id'=c('a', 'b', 'c'), 'a' =1:3, 'b'=3:6, 'id2'=c('a', 'c', 'c'),
'id93' = c(T,T,F))
tt <- as.data.frame('id'=c('a', 'b', 'c'), 'a' =1:3, 'b'=3:6, 'id2'=c('a', 'c', 'c'),
'id93' = c(T,T,F))
tt <- data.frame(id=c('a', 'b', 'c'),
a =1:3, b=3:6, id2=c('a','c','c'),
id93 = c(T,T,F))
tt <- data.frame(id=c('a', 'b', 'c'),
a =1:3, b=3:5, id2=c('a','c','c'),
id93 = c(T,T,F))
tt <- data.frame(id=c('a', 'b', 'c'),
a =1:3, b=c(3.3333, 3.0000, 8), id2=c('a','c','c'),
id93 = c(T,T,F))
is.numeric(tt)
apply(tt, 2, is.numeric)
str(tt)
class(tt)
a = str(tt)
a
str(tt)
tt <- data.frame(id=c('a', 'b', 'c'),
a =1:3, b=c(3.3333, 3.0000, 8), id2=c('a','c','c'),
id93 = c(T,T,F))
apply(tt, 2, is.numeric)
lapply(tt, is.numeric)
sapply(tt, is.numeric, simplify = F)
sapply(tt, is.numeric, simplify = T)
sapply(tt, is.numeric)
a = sapply(tt, is.numeric)
tt[,sapply(tt, is.numeric)]
a =tt[,sapply(tt, is.numeric)]
byin = 'id'
column_to_rownames(tt, var = byin)
tibble::column_to_rownames(tt, var = byin)
tt
sapply(tt, is.numeric)
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
data("gencode.v22.annot")
data("gencode.v22.annot")
gencode.v22.annot <- readRDS('./data/gencode.v22.annot.RData')
save(gencode.v22.annot, './data/gencode.v22.annot.RData')
save(gencode.v22.annot, file = './data/gencode.v22.annot.RData')
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
file.remove("NAMESPACE")
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
tmpenv <- new.env(parent = emptyenv())
data(gencode.v22.annot, package = "LZ", envir = tmpenv)
View(tmpenv)
# all_anot <- getData()
all_anot <- tmpenv$gencode.v22.annot
rm(tmpenv)
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
devtools::build()
L
install.packages("D:/DISKD/LZ/LZ_1.4.8.tar.gz", repos = NULL, type = "source")
library(LZ)
library(LZ)
devtools::install_github("ArronLZ/LZ", build_manual = T, build_vignettes = T,
upgrade = "never", force = T)
vignette("LZ")
install.packages('tinytex')
LZ:setproxy()
tinytex::install_tinytex()
library(LZ)
LZ:setproxy()
LZ::setproxy()
tinytex::install_tinytex()
devtools::install_github("ArronLZ/LZ", build_manual = T, build_vignettes = T,
upgrade = "never", force = T)
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/\\\]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/\\]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/\]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/`\`]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/`\`]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/`\\`]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/`\|\`]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/`\\\`]")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/'\\\']")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/'\\']")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/'\']")
trimws("./ff/ff\\", which = "both", whitespace = "[ \t\r\n\\/\\\\]")
trimws("./ff/ff\\\\", which = "both", whitespace = "[ \t\r\n\\/\\\\]")
trimws("./ff/ff\\\\\\\\\", which = "both", whitespace = "[ \t\r\n\\/\\\\]")
trimws("./ff/ff\\\\\\\\\\", which = "both", whitespace = "[ \t\r\n\\/\\\\]")
gsub(pattern = "\\\\", "/", "D:\\a\\b\\c/")
gsub(pattern = "\\\\", "/", "D:/a/b/c/")
gsub(pattern = "\\\\", "/", "D:\a\b\c")
gsub(pattern = "\\\\", "/", "D:\a\b\cf")
gsub(pattern = "\\\\", "/", "D:\acc\bcc\ccf")
gsub(pattern = "\\\\", "/", 'D:\acc\bcc\ccf')
gsub(pattern = "\\\\", "/", 'D:\acc\bcc\aaccf')
gsub(pattern = "\\", "/", 'D:\acc\bcc\aaccf')
gsub(pattern = "\\\", "/", 'D:\acc\bcc\aaccf')
trimws("./ff/ff\\\\\\\\\\", which = "both", whitespace = "[ \t\r\n\\/\\\\]")
gsub(pattern = "\\\\", "/", 'D:\acc\bcc\aaccf')
gsub(pattern = "\\\\", "/", 'D:\acc\bcc\\aaccf')
gsub(pattern = "\\\\", "/", `D:\acc\bcc\\aaccf`)
gsub(pattern = "\\\\", "/", str("D:\acc\bcc\\aaccf"))
gsub(pattern = "\\\\", "/", "D:\acc\bcc\\aaccf", fixed = T)
gsub(pattern = "\\\\", "/", "D:\acc\bcc\\aaccf", fixed = T, perl = F)
gsub(pattern = "\\\\", "/", "D:\acc\bcc\aaccf", fixed = T, perl = F)
gsub(pattern = "\", "/", "D:\acc\bcc\aaccf", fixed = T, perl = F)
gsub(pattern = "\\", "/", "D:\acc\bcc\aaccf", fixed = T, perl = F)
gsub(pattern = "\\\\", "/", "D:\acc\bcc\aaccf", fixed = T, perl = F)
normalizePath("D:\acc\bcc\aaccf")
file.path("D:\acc\bcc\aaccf")
file.path("D:\PRwork\luad/deg/DESeq2.exprMatrix_rpm.txt")
file.path("D:\PRwork\luad\deg\DESeq2.exprMatrix_rpm.txt")
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
devtools::load_all()
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
getwd()
unlink("./test/55/")
unlink("./test/55/", recursive = T)
unlink("./test/")
unlink("./test")
unlink("./test", recursive = T)
dir.create('test')
dir.create('test', recursive = T)
devtools::install_github("ArronLZ/LZ", upgrade = "never", build_vignettes = F,
force = T)
devtools::install_github("ArronLZ/LZ", upgrade = "never", build_vignettes = F,
force = T)
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
devtools::install_github("ArronLZ/LZ", upgrade = "never", build_vignettes = F,
force = T)
usethis::edit_r_environ()
tinytex::is_tinytex()
tinytex::use_tinytex()
LZ::mkdir
LZ::mkdir("AAA")
LZ::mkdir.p
!exists("AAA/aaa/")
exists("AAA/aaa/")
dir.exists("AAA/aaa")
!dir.exists("AAA/aaa")
mkdir(dirclean(outdir))
library(LZ)
mkdir(dirclean(outdir))
mkdir(dirclean("AAA/aaa"))
cat(paste0("Warning: The directory ", dir, "already exists, do you want to
delete the entire directory and re-create it ? !
IF YOU ARE SURE WHAT YOU ARE DOING, please use the function mkdir.p.
Otherwise, you can ignore this warning message.\n"))
dir = 1
cat(paste0("Warning: The directory ", dir, "already exists, do you want to
delete the entire directory and re-create it ? !
IF YOU ARE SURE WHAT YOU ARE DOING, please use the function mkdir.p.
Otherwise, you can ignore this warning message.\n"))
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
library(LZ)
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
# devtools::clean_vignettes()
# devtools::build_vignettes()
devtools::build()
devtools::install_github("ArronLZ/LZ", upgrade = "never", build_vignettes = F,
force = T)
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
# devtools::clean_vignettes()
# devtools::build_vignettes()
devtools::build()
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
devtools::install_github("ArronLZ/LZ", upgrade = "never", build_vignettes = F,
force = T)
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
devtools::load_all()
devtools::load_all()
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
# 总结(极简: document() + build)
# 1. devtools::load_all()
# 2. 1. devtools::document()
#    2. vim DESCRIPTION(usethis::函数或手动)
# 3. devtools::check() / devtools::build()
# LDCB流程
file.remove("NAMESPACE")
unlink("man")
devtools::load_all()
devtools::check() # 每次改动后最好都check一下
devtools::check() # 每次改动后最好都check一下
devtools::load_all()

suppressMessages(library(tidyverse))
suppressMessages(library(shiny))
suppressMessages(library(shinydashboard))
suppressMessages(library(data.table))
suppressMessages(library(scales))
suppressMessages(library(ggplot2))
suppressMessages(library(edgeR))
suppressMessages(library(DESeq2))
suppressMessages(library(limma))
suppressMessages(library(ggsci))
suppressMessages(library(survival))
suppressMessages(library(survivalROC))
suppressMessages(library(survminer))
suppressMessages(library(waiter))
pkgs <- c("tidyverse","shiny","shinydashboard","data.table","ggplot2",
"ggsci","scales","edgeR","DESeq2","limma","survival","survivalROC",
"survminer","waiter")
for (pkg in pkgs) {
library(pkg, character.only = T, logical.return = T)
}
pkgs <- c("tidyverse","shiny","shinydashboard","data.table","ggplot2",
"ggsci","scales","edgeR","DESeq2","limma","survival","survivalROC",
"survminer","waiter")
for (pkg in pkgs) {
library(pkg, character.only = T, logical.return = T)
}
library("edgeR", character.only = T, logical.return = T)
library("edge", character.only = T, logical.return = T)
for (pkg in pkgs) {
library(pkg, character.only = T, logical.return = T)
}
pkgs <- c("tidyverse","shiny","shinydashboard","data.table","ggplot2",
"ggsci","scales","edgeR","DESeq2","limma","survival","survivalROC",
"survminer","waiter")
for (pkg in pkgs) {
library(pkg, character.only = T, logical.return = T)
}
for (pkg in pkgs) {
cat(pkg)
library(pkg, character.only = T, logical.return = T)
}
for (pkg in pkgs) {
cat(pkg, "\n")
library(pkg, character.only = T, logical.return = T)
}
for (pkg in pkgs) {
if (pkg == pkgs[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
library(pkg, character.only = T, logical.return = T)
}
for (pkg in pkgs) {
if (pkg == pkgs[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T) ) {
install.packages(pkg)
}
}
for (pkg in pkgs) {
if (pkg == pkgs[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T) ) {
install.packages(pkg)
}
}
for (pkg in pkgs) {
if (pkg == pkgs[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg)
}
}
pkgs_bio <- c("edgeR","DESeq2","limma")
pkgs <- c("tidyverse","shiny","shinydashboard","data.table","ggplot2",
"ggsci","scales","survival","survivalROC",
"survminer","waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
for (pkg in pkgs) {
if (pkg == pkgs[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg)
}
}
getOption("repos")
chooseCRANmirror()
getOption("repos")
chooseCRANmirror()
getOption("repos")
getOption("repos")
chooseCRANmirror()
getOption("repos")
for (pkg in pkgs) {
if (pkg == pkgs[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg, repos = "https://mirrors.ustc.edu.cn/CRAN")
}
}
BiocManager::repositories()
chooseBioCmirror()
getOption()
getOption("bio_repos")
getOption()
chooseBioCmirror(ind = 6)
chooseBioCmirror(ind = 6)
BiocManager::repositories()
getOption()
chooseBioCmirror()
chooseBioCmirror(ind = 5)
Sys.getenv()
chooseBioCmirror(ind = 6)
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse","shiny","shinydashboard","data.table","ggplot2",
"ggsci","scales","survival","survivalROC",
"survminer","waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse","shiny","shinydashboard","data.table","ggplot2",
"ggsci","scales","survival","survivalROC",
"survminer","waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse","shiny","shinydashboard",
"data.table","ggplot2","ggsci","scales","survival",
"survivalROC","survminer","waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse","shiny","shinydashboard",
"data.table","ggplot2","ggsci","scales","survival",
"survivalROC","survminer","waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse","shiny","shinydashboard",
"data.table","ggplot2","ggsci","scales","survival",
"survivalROC","survminer","waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse","shiny","shinydashboard",
"data.table","ggplot2","ggsci","scales","survival",
"survivalROC","survminer","waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
for (pkg in pkgs_bio) {
if (pkg == pkgs_bio[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
BiocManager::install(pkg)
}
}
suppressMessages(suppressWarnings(
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings({
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
for (pkg in pkgs) {
if (pkg == pkgs[1]) {
cat("The Packages List:\n")
install.packages(pkg, repos = "https://mirrors.ustc.edu.cn/CRAN")
BiocManager::install(version = "3.17")
}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg, repos = "https://mirrors.ustc.edu.cn/CRAN")
}
}
chooseBioCmirror(ind = 6)
for (pkg in pkgs_bio) {
if (pkg == pkgs_bio[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
BiocManager::install(pkg)
}
}
}))
suppressMessages(suppressWarnings({
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
for (pkg in pkgs) {
if (pkg == pkgs[1]) {
cat("The Packages List:\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg, repos = "https://mirrors.ustc.edu.cn/CRAN")
BiocManager::install(version = "3.17")
}
}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg, repos = "https://mirrors.ustc.edu.cn/CRAN")
}
}
chooseBioCmirror(ind = 6)
for (pkg in pkgs_bio) {
if (pkg == pkgs_bio[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
BiocManager::install(pkg)
}
}
}))
pkgs <- c("BiocManager", "tidyverse", "shiny", "shinydashboard",
"data.table", "ggplot2", "ggsci", "scales", "survival",
"survivalROC", "survminer", "waiter")
pkgs_bio <- c("edgeR","DESeq2","limma")
suppressMessages(suppressWarnings({
for (pkg in pkgs) {
if (pkg == pkgs[1]) {
cat("The Packages List:\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg, repos = "https://mirrors.ustc.edu.cn/CRAN")
BiocManager::install(version = "3.17")
}
}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
install.packages(pkg, repos = "https://mirrors.ustc.edu.cn/CRAN")
}
}
chooseBioCmirror(ind = 6)
for (pkg in pkgs_bio) {
if (pkg == pkgs_bio[1]) {cat("The Packages List:\n")}
cat(pkg, "\n")
if ( !library(pkg, character.only = T, logical.return = T, quietly = T) ) {
BiocManager::install(pkg)
}
}
}))
devtools::install_github("ArronLZ/LZ", build_manual = T, build_vignettes = T,
upgrade = "never", force = T)
vignette("LZ")
a <- data.frame(a=1:4, b=2:5)
ndim(a)
dim(a)
View(a)
# 1. 定义Person对象 -- 定义数据对象类型
setClass("Person", slots=list(name="character",age="numeric"))
# 2. 定义泛型函数work即接口  -- 定义接口函数
setGeneric("work", function(object) standardGeneric("work"))
# 3. 定义work的实现，并指定参数类型为Person对象 -- 定义实现函数
setMethod("work", signature(object="Person"),
function(object) cat(object@name,"is working"))
# 4. 把对象 以参数形式 传入接口， 执行实现函数
# 创建一个Person对象a
a <- new("Person", name="Conan", age=16)
# 把对象a传入work函数
work(a)
vignette("LZ")
library(LZ)
DEGp_Volcano
Sys.Date()
install.packages("pkgdown")
vignette("LZ")
log2(1.2)
devtools::build()
devtools::build()
devtools::build()
DEGp_Volcano
usethis::use_pkgdown()
devtools::build()
pkgdown::build_site()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
devtools::check() # 每次改动后最好都check一下
devtools::check() # 每次改动后最好都check一下
Sys.Date()
devtools::build()
devtools::build()
vignette("LZ")
load("data/gencode.v22.annot.RData")
load("data/keggpathway.gmt.RData")
data("gencode.v22.annot")
data("gencode.v22.annot")
data("data/keggpathway.gmt.RData")
data("keggpathway.gmt.RData")
data("keggpathway.gmt")
devtools::build()
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
file.remove("NAMESPACE")
unlink("man", recursive = TRUE)
devtools::load_all()
devtools::document() # usethis::use_package("stats", type = "Depends")
devtools::check() # 每次改动后最好都check一下
data('gencode.v22.annot')
data('gencode.v22.annot')
devtools::build()
# devtools::clean_vignettes()
devtools::build_vignettes()
usethis::use_pkgdown()
pkgdown::build_site()
devtools::build()
install.packages("D:/LZ/LZ_1.4.6.tar.gz", repos = NULL, type = "source")
devtools::build()
install.packages("D:/LZ/LZ_1.4.7.tar.gz", repos = NULL, type = "source")
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown()
usethis::use_pkgdown_github_pages()
gh_token_help()
usethis::create_github_token()
usethis::gh_token_help()
usethis::edit_r_environ()
gitcreds::gitcreds_set()
usethis::edit_r_environ()
usethis::edit_r_environ()
gitcreds::gitcreds_set()
usethis::use_pkgdown_github_pages()
usethis::edit_r_environ()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
devtools::build()
devtools::build()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::build()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
install.packages("preferably")
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
LZ::setproxy()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
LZ::setproxy()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
pkgdown::build_site()
LZ::setproxy()
pkgdown::build_site()
# usethis::use_pkgdown_github_pages()
LZ::setproxy()
pkgdown::build_site()
LZ::setproxy()
pkgdown::build_site()
LZ::setproxy()
pkgdown::build_site()
pkgdown::build_site()
chooseBioCmirror()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site(devel = T)
pkgdown::build_site(devel = F)
pkgdown::build_site(devel = T)
options(pkgdown.internet = FALSE)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
install.packages("bslib")
install.packages("bslib")
pkgdown::build_home_index()
pkgdown::init_site()
vignette("LZ")
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
# devtools::clean_vignettes()
devtools::build_vignettes()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgbuild::
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()

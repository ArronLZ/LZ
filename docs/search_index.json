[["index.html", "LZ 文档 前言 为何阅读本书 本书结构 致谢", " LZ 文档 作者：荔枝 earth_farmer@outlook.com 更新：2023-12-17 前言 本包致力于简化生信分析流程和批量分析。目前主要为RNAseq分析流程，后期会加入多组学联合 分析流程。 为何阅读本书 本书是为LZ R package写的使用文档。旨在让完全没有编程基础或R基础的人学会使用LZ包来进 行一些生信分析。LZ包致力于简化生信分析流程和批量分析。 目前LZ包已经完成了RNAseq下游分析流程的大部分，后期完善后还有加入更多的功能。例如 RNAseq的上有分析流程，多组学联合分析流程，单细胞分析流程。 通过学习完本书，您将会在不需要系统学习R语言的情况下快速分析测序数据，如有疑问请发 email至earth_farmer@outlook.com，尽量有答复但不予保证。 本书结构 致谢 "],["install.html", "1 安装 1.1 安装R及Rsudio环境 1.2 安装LZ包", " 1 安装 1.1 安装R及Rsudio环境 LZ R包可以从Github上安装。 先安装R及Rstudio, 前者是核心，后者是编辑器(写代码的地方)。 1. 安装R最新版，根据系统自行选择 版本，win用户可以直接点R-4.3.2下载。 2. 安装Rstudio最新版，win用户可直接点Rstudio Desktop下载 3. Win电脑可以考虑安装R版本对应的Rtools (可选项，新手可以不安装) 4. 重要提示：请卸载或者至少退出一切杀毒软件(微软自带的不用退出)，否则安装包时可能会出现难以解决的奇怪bug。 1.2 安装LZ包 安装LZ包所需的依赖包 # 安装biocondutor if (!require(&quot;BiocManager&quot;, quietly = TRUE)) { install.packages(&quot;BiocManager&quot;) BiocManager::install(version = &quot;3.18&quot;) # 4.3 == 3.18 } # 设置镜像(可选) options(&quot;repos&quot; = c(CRAN = &quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&quot;)) options(BioC_mirror=&quot;https://mirrors.tuna.tsinghua.edu.cn/bioconductor&quot;) # 安装LZ依赖包 # 安装cran包 cran_pack &lt;- c(&#39;devtools&#39;, &#39;prettydoc&#39;, &#39;Hmisc&#39;, &#39;markdown&#39;, &#39;Hmisc&#39;, &#39;tidyverse&#39;) for (p in cran_pack) { if (!requireNamespace(p, quietly = T)) install.packages(p) } # 安装bioconductor包 bioc_pack &lt;- c(&quot;DOSE&quot;, &quot;clusterProfiler&quot;, &#39;DESeq2&#39;, &#39;edgeR&#39;, &#39;limma&#39;, &quot;topGO&quot;, &#39;Rgraphviz&#39;, &#39;org.Hs.eg.db&#39;) for (p in bioc_pack) { cat(p, &#39;=========\\n&#39;) if (!requireNamespace(p, quietly = T)) BiocManager::install(p, update = F, ask =F) } 安装LZ包(此包会不定时更新，后续更新只需要重新运行这句即可，上面的包不需要重新安装) # 安装LZ包 devtools::install_github(&quot;ArronLZ/LZ&quot;, upgrade =&quot;never&quot;, force = T, build_vignettes = T) # 查看文档（点击LZ Documents查看网页版） vignette(&#39;LZ&#39;) "],["deg.html", "2 RNAseq差异分析 2.1 差异分析 2.2 火山图 2.3 热图", " 2 RNAseq差异分析 2.1 差异分析 2.1.1 加载包 rm(list = ls());gc() library(LZ) library(tibble) library(data.table) library(DESeq2) library(parallel) library(BiocParallel) library(ggplot2) cat(&quot; 您电脑线程为:&quot;, detectCores()) # 如果是12代以后的interCPU,建议最高不超过6或8。服务器可加大设置， # 但不能大于线程总数。 # 此处如果电脑性能一般，建议直接使用n=4或者2。 n = 4 # register(MulticoreParam(n)) 苹果和linux电脑使用这句替代下句 register(SnowParam(n)) 2.1.2 数据准备 RNAseq下游分析必须准备两个文件：表达矩阵表格文件，分组表格文件 将gene_count.csv，group.csv放在工作目录下 gene_count.csv 矩阵数据格式(数值型，整型) ID sample1 sample2 sample3 sample4 gene1 34 23 56 23 gene2 35 23 12 23 gene3 12 78 78 78 group.csv 分组数据格式：需要组的行名 包含于 表达谱的列名 rownames(group) %in% colname(eset) Sample Type BATCH sample1 tumor 1 sample2 tumor 1 sample3 normal 2 sample4 normal 2 注意： 表达文件中的基因名是SYMBOL还是ESembleID。如为EsembleID,要注意是有小数点的ID还是没有小数点的。 有小数点的形式为这样：ESEM00000123.34，没有点的是ESEM00000123。 还有记住基因名这列的列名，建议统一设置为ID。 2.1.3 文件夹准备 本文中有时也将文件夹称为目录，这两者等价。建议每个项目新建一个文件夹，例如本项目新建了一个名为 LZexample的文件夹，然后再在这个文件夹下建了一个data文件夹，以后data目录专门用来存原始文件，例 如RNAseq分析所需的eset.csv, group.csv或者更加原始的文件。 目录结构建议：本项目的目录初始结构，建议每个项目按着这个形式来。项目文件夹LZexample这个文 件夹名建议改成有意义的名称，一眼便能看出这个项目是什么数据或者什么目的，而data文件夹名不建议更改。 图片 2.1.4 差异分析预设置 # 设置工作目录，即之后所有的操作如果不指定文件夹，都将会在这个文件夹下进行 setwd(&quot;C:/data/LZexample&quot;) # 按需更改成你的项目文件夹 getwd() # 检查是否更改工作目录成功了？ # Windows系统下默认的文件夹路径是 &quot;C:/data/LZexample&quot; 这中斜杆分隔文件夹， # 如果是直接从win复制而来的，请将斜杠\\改成反斜杠/, 就如下面设置的这样。（改成\\\\也行） # 设置此次分析的标记 mark &lt;- &quot;T_C&quot; # 此次分析的标记(记录谁比谁或和筛选阈值，建议设置的有意义) # 设置结果输出的文件夹，按需设定，可保持默认。 # 第一次分析可以不用改，但如是第二分析，必须至少修改mark,outdir其中一个， # 否则会覆盖第一次的结果。 outdir &lt;- &quot;result&quot; outdirsub &lt;- paste0(outdir, &quot;/&quot;,mark) outdirsub.gsea &lt;- paste0(outdirsub, &quot;/gsea&quot;) outdirsub.rich &lt;- paste0(outdirsub, &quot;/rich&quot;) # 按以上设置，结果将会保存在当前工作目录下的result/T_C文件夹下 # 差异分析阈值设定 ffdr &lt;- 0.1 fpval &lt;- 0.05 flogfc &lt;- 1 2.1.5 差异分析 # 读取并整理数据（如果都是按照上面的要求来的，不需要改这里的参数） glist &lt;- DEG_prepareData(eset_file = &quot;data/eset.csv&quot;, #表达数据的相对路径 group_file = &quot;data/group.csv&quot;, #分组文件的相对路径 id_dot = F, # ESEM是否有点，有点设为T col.by = &quot;ID&quot;, # 基因名列的列名 annot_trans = F, # 是否要注释，如果是EsembleID就需要设置为T f_mark = mark) # 差异分析 deseq2三部曲 dds &lt;- DEG_DESeq2.dds(exprset.group=glist, batch = F) DEG_DESeq2.pca(dds, outdir = outdirsub) # 此处有warning信息，不用管。 dds_list &lt;- DEG_DESeq2.ana(dds) # 差异后分析 # 构建GSEA官网软件分析所需格式文件 #此处会有warning,不用管 DEGres_ToGSEA(diffan.obj = dds_list, outdir = outdirsub.gsea) # all_father中记录了 # 差异分析的总表，默认阈值的差异基因表， # 上调基因列表，下调基因列表 # 以及R-GSEA分析所需要的所有mRNA的表达排序列表。 # 是我们后续各种分析的万恶之源（因此命名all_father） # 上述数据同时保存于当前工作目录/outdirsub.rich， # 文件是一个多sheet的xlsx表 all_father &lt;- DEGres_ToRICH(diffan.obj = dds_list, p=fpval, q=ffdr, f=flogfc, mark=mark, outdir = outdirsub.rich) save.image(file = paste0(outdirsub, &quot;/1.diff.img.RDATA&quot;)) # 保存中间数据 2.2 火山图 需要修改的是以下几个值： df_valcano：文件读取时的文件路径 ffdr: FDR阈值 fpval: PValue阈值 flogfc: logFC阈值 filterc: 火山图展示模式(p,fdr均考虑模式, 仅考虑p值模式，仅考虑fdr值模式，默认为第一种”fppadj”) label_gene: 展示基因列表 不清楚建议默认：fdr=0.1, pval=0.05, p,fdr均考虑模式。仅修改label_gene: 展示基因列表即可。 # 本流程中不需要运行，后续想再次分析时可从此步开始 # load(&quot;./result/T_C/1.diff.img.RDATA&quot;) # library(LZ) library(ggpubr);library(ggrepel);library(ggsci);library(scales) library(tidyverse);library(dplyr);library(pheatmap);library(RColorBrewer) # 导入火山图需要的数据，即差异分析后的未筛选表格(我们也称这个对象为resdf, # resdf文件涵盖差异分析的所有结果信息，可以做后续所有基于差异分析或者基因 # 列表的所有分析，如果后续分析时使用其它数据，请按这个resdf的格式改数据， # 主要就是把数据的列名改成和resdf的列名相同，即可用此包的函数分析画图) # 即df_valcano &lt;- readxl::read_xlsx(&quot;xxx.xlsx&quot;, sheet = 1) df_valcano &lt;- all_father$DIFF.ALL names(df_valcano) # 对应的列名必须为Gene, log2FC, PValue, FDR # 差异分析阈值设定 ffdr &lt;- 0.1 fpval &lt;- 0.05 flogfc &lt;- 1 # 模式设定 # pvalue, padj均考虑模式 (&quot;fpadj&quot;:仅考虑fdr值模式, &quot;other&quot;: 仅考虑p值模式) filterc &lt;- &quot;fppadj&quot; # 设定需要标记的marker gene label_gene &lt;- c(&#39;TFRC&#39;, &#39;ACSL1&#39;, &#39;LPCAT3&#39;, &#39;PCBP1&#39;, &#39;FTH1&#39;, &#39;SLC11A2&#39;, &#39;SLC39A8&#39;, &#39;SAT1&#39;, &#39;FTL&#39;, &#39;GSS&#39;) # 查看想展示的基因在不在差异分析总表中 # label_gene %in% df_valcano$Gene %&gt;% all # pic_data %&gt;% filter(Row.names %in% label_gene) # 火山图数据预处理 pic_data &lt;- DEGp_prepareVolcano(df_valcano = df_valcano, filterc = filterc) # 火山图 无标记 DEGp_Volcano(result = pic_data, logFC = flogfc, adj_P = ffdr, label_geneset = NULL) ggsave(paste0(outdirsub,&quot;/valcano.pdf&quot;), width = 7, height = 7) # 保存 # 火山图 有标记 DEGp_Volcano(result = pic_data, logFC = flogfc, # log2(2) adj_P = ffdr, label_geneset = label_gene) %&gt;% ggplotGrob() %&gt;% cowplot::plot_grid() ggsave(paste0(outdirsub, &quot;/valcano.mark.gene.pdf&quot;), width = 7, height = 7) 2.3 热图 On the way … "],["enrich.html", "3 富集分析 3.1 GO &amp; KEGG 富集分析 3.2 GSEA分析", " 3 富集分析 3.1 GO &amp; KEGG 富集分析 3.1.1 一键脚本(批量处理) 这是一个一键脚本，请新建一个单独的文件写这段脚本，然后按这个脚本的顶部注释 修改resdf outd fc.list处即可，运行即可批量出不同FC的富集分析结果。 # 此脚本为GO、KEGG分析（需要一个输入文件即可，为差异分析流程后的resdf文件） # 即为第一步(或1脚本)的结果的一个结果文件（DIFF_an_***.xlsx） # 即为resdf文件，此文件是差异分析后的总表 # 注意如果采用了其他的分析方法得到差异分析后表，运行这个脚本时可能需要更改 # 列名即我们的resdf对象的列名为Gene, log2FC,PValue,FDR，需要与这些个列名保 # 持一致。 # 此脚本中的需要修改的位于 /// *** /// 行中，另外还有一个LZ::setproxy()行， # 如果没有代理工具，或者代理工具不支持http代理，或者端口不通，请不要运行。 rm(list = ls());gc() # 清空所有对象，慎用，必要时用 suppressMessages({ suppressWarnings({ library(LZ) library(tidyverse);library(data.table) library(clusterProfiler);library(enrichplot) library(topGO);library(Rgraphviz) library(RColorBrewer);library(ggsci);library(pheatmap) library(readxl) }) }) # 若无代理工具，切勿运行 # LZ::setproxy() # 高危！！！新手不要运行此行，会使当前窗口断网！！！ # Sys.getenv(&#39;http_proxy&#39;) Sys.setenv(&#39;http_proxy&#39;=&#39;&#39;) Sys.setenv(&#39;https_proxy&#39;=&#39;&#39;) # 如果是自己提供的表格，要按需修改列名为标准的resdf格式的列名： # 即: 表格必须含列名Gene, log2FC, PValue, FDR这四列，列名必须为这四个， # 提前在xlsx中修改好，然后取消下面这句的注释符，运行 # resdf &lt;- readxl::read_xlsx(&quot;result/rnaseqOR-NC/rich/DIFF.an_OR-NC.xlsx&quot;, # sheet = 1) %&gt;% as.data.frame() # 按流程跑下来是运行这句，注意这句和上面的注释掉的是二选一，不要重复运行 resdf &lt;- all_father$DIFF.ALL # 输出目录 outd = &quot;result/xx/rich&quot; # logFC阈值, 多个阈值的话， # 写成fc.list &lt;- list(&#39;1.2&#39; = log2(1.2), &#39;2&#39; = log2(2)) # 注意！！！！！！：括号里log2(2)的2，和引号里&#39;2&#39;的2都要需同步要改。！！！ # 否则可能会覆盖结果 # logFC阈值, 多个阈值 fc.list &lt;- list(&#39;1.5&#39; = log2(1.5), &#39;2&#39; = log2(2), &#39;4&#39; = log2(4)) # logFC阈值, 单个阈值运行这句，也是二选一，不要重复运行 # fc.list &lt;- list(&#39;2&#39;=log2(2)) # 设置物种为人类（如是人类则不需要更改） GO_database &lt;- &#39;org.Hs.eg.db&#39; # keytypes(org.Hs.eg.db) KEGG_database &lt;- &#39;hsa&#39; # 预处理数据符合GOKEGG分析的要求 # # 不同fc条件下的GOgenelist list(ALL, UP, DOWN) gogenelist &lt;- lapply(fc.list, function(x) { DEG_prepareGOglist(resdf, logfc = x, p = 0.05, fdr = 0.1)) } # gogenelist %&gt;% length() # 对logFC迭代，每个FC新建一个目录，用来存upgene, downgene, allgene的GO结果 enrich &lt;- DEG_runENRICH(genelist = gogenelist, outdir = outd, glist.save = T, rungo = T, runkegg = T, rapid = T) 3.1.2 简易GO,KEGG一次分析 如果已经得到了差异基因列表，且无需批量分析，可以进行这个简易分析。 数据格式: head(genelist.lh) [1] “AARS1” “AATF” “ABCB7” “ABCE1” “ABHD11” “ABHD12” # 简易GO,KEGG一次分析(即：已经得到了差异基因列表) # LZ::setproxy() # 代理设置，新手别碰，会断网 # 差异基因列表 genelist.lh &lt;- pic.list$sig.data$Gene # 转换ID gene_df &lt;- bitr(genelist.lh, fromType = &quot;SYMBOL&quot;, toType = c(&quot;ENTREZID&quot;, &quot;UNIPROT&quot;), OrgDb = &#39;org.Hs.eg.db&#39;) # GO分析 go.lh &lt;- DEG_GO(gene_df, orgdb = &quot;org.Hs.eg.db&quot;, sigNodes = 20, resultdir=&quot;./result/proteinOR-NC&quot;, filemark = &quot;p1.5_g_2&quot;) go.lhdf &lt;- sapply(go.lh, function(x) x@result, simplify = T) write_xlsx(go.lhdf, path = &quot;./result/xx/lh_go.all.xlsx&quot;) # KEGG分析 kegg.lh &lt;- DEG_KEGG(gene_df) write_xlsx(kegg.lh$pSigDF, path = &quot;./result/xx/lh_kegg.all.xlsx&quot;) 3.1.3 GO、KEGG分析结果可视化 {#enrich-visual} # dotplot go # 读取go分析保存的表格 #dotData &lt;- go$GODF$&quot;倍数&quot;$变化趋势(BP) # 自己提供表格读取 #dotData &lt;- readxl::read_xlsx(&quot;kegg.xlsx&quot;, sheet = 1) dotData &lt;- enrich$GODF$&quot;2&quot;$all # 筛选数据（按需配合其他筛选） dotData &lt;- DEGp_prepareDotplot(dotData, head = 30, delete = NULL) pic.dot &lt;- DEGp_Dotplot(dotData, title = &#39;TOP of GO&#39;, resultdir = &quot;./result/proteinOR-NC&quot;, filemark = &#39;GO_top&#39;, pic.save = T) # dotplot kegg # 读取kegg分析保存的表格，格式要求 # 必须要有这四列Description, GeneRatio, pvalue, qvalue。Count列可有也可无。 # 读取表格 # dotDatak &lt;- readxl::read_xlsx(&quot;./result/proinOR/kegg.xlsx&quot;, sheet = 1) dotDatak &lt;- enrich$KEGGDF$&#39;2&#39;$up # 筛选数据（按需配合其他筛选） dotDataK &lt;- DEGp_prepareDotplot(dotDatak, head = 30, delete = NULL) pic.dotk &lt;- DEGp_Dotplot(dotDataK, title = &#39;TOP of KEGGpathway&#39;, resultdir = &quot;./result/proteinOR-NC&quot;, filemark = &#39;KEGG_top&#39;, pic.save = F) # 组合图(可选运行，比例不是很好调整，单独出图AI内调整更自由) gh &lt;- ggplotGrob(pic.dot) gd &lt;- ggplotGrob(pic.dotk) cowplot::plot_grid(gh, gd, rel_widths = c(1, 1.25)) ggsave(paste0(dir_out, &quot;/GO_KEGG_top.pdf&quot;), width = 16, height = 10) 3.2 GSEA分析 3.2.1 R GSEA 批量分析 GSEA官网提供了GSEA分析软件和MSigDB数据库中的所有通路下载，如果需要更多的通路集可以自行下载，本包内置了MSigDB的H,C1-8的所有大类集及C2,C5的部分重要子类集，还有整理好的最新版的KEGG官方的PATHWAY通路集合。 library(LZ) library(clusterProfiler) library(enrichplot) library(shiny) library(ggplot2) # 1. Gene list 排序表 genelist &lt;- all_father$gsealist # 2. Pathway Gene Set 表 # 内置数据集 gmt.largelist.23.12.Hs.symbols # 含1. msigDB数据库的全部通路大类 # 2. msigDB的C2,C5的部分子集通路[这些子集是C2,C5的一部分] # 3.最新版本的KEGG全部通路 data(&quot;gmt.largelist.23.12.Hs.symbols&quot;) # 选择KEGG通路集合，把美元符号后面字符删掉，然后按tab键可以选择其他数据集 gmt &lt;- gmt.largelist.23.12.Hs.symbols$kegg.all.23.12.Hs.symbols.gmt # 全部该GeneSet数据的通路GSEA分析 ----------- gsea &lt;- DEG_runGSEA(genelist=genelist, gmt_set=gmt, pic.save=F) # 将所有的分析结果导出到本地[gsea.result]文件夹，统计总结表名为gsea_stat # 导出文件夹名和文件名均可按需修改 DEGp_GSEA_plotALL(gsea, result_dir = &quot;gsea.result&quot;, xl_filename = &quot;gsea_stat&quot;) # 单个GeneSet数据的通路GSEA分析（且从自己准备的gmt文件开始），可从MSigDB网 # 站搜索下载 # 设定文件路径 gmt_filename &lt;- &quot;D:/Team/RNAseq/data/geneset/WP_FERROPTOSIS.v2022.1.Hs.gmt&quot; gmt_single &lt;- clusterProfiler::read.gmt(gmt_filename) gsea.single &lt;- DEG_runGSEA(genelist = genelist, gmt_set = gmt_single, pic.save=T, outdir = &quot;./gsea.result2/&quot;, filename = &quot;ferr&quot;) 3.2.2 R GSEA 图形界面 图形界面可以用自己的表格数据上传来做GSEA分析，表格必须有且仅有两列，分别 为Gene列和log2FC列，具体表格形式如下： Gene log2FC geneA 9.8 geneX 4.3 geneY 1.2 … … geneZ 0.3 geneB -0.8 geneZ -5.2 注意：虽然要求第二列名为log2FC,但第二列只要是表示变化倍数就可以，不一定要是log2后数据，没有排序也没关系。 # 启动方法1，已经在R里载入了genelist的话，运行此句启动图形界面，这样就不需要 # 上传表格 runAPP_GSEA(genelist = genelist) # 启动方法2，如果想使用自己的表格，那么运行此句，这样情况不需要在R里写任何 # 代码，只要加载上述的R包，然后运行此句即可。 # 使用这种方法，则必须要上传表格后才能点击画图，否则会报错终端程序。中断后 # 重新运行此句再次打开即可。 runAPP_GSEA() 一些进阶操作及技巧(不会没有关系，不做过多解释，自行体会) # 进阶操作 --------------------------- # 1. 转换成宽型文件 gmt.w2 &lt;- gmt_longTowide2(gmt) # 2. 查找指定通路的图 # 如果自己知道通路的名字，可以通过查找来定位到通路的位置，然后单独画图 pathway = &quot;^ABC&quot; n = grep(pathway, gsea[,&quot;ID&quot;]) grep(pathway, gsea[,&quot;ID&quot;], value = T) # 查看找到的通路名称，必须时唯一值，否则请使用更加详细的查找条件再查找一次。 DEGp_GSEA(gsea, num = n) # 3. 从当前的gmt文件中获取指定的Pathway Gene set(gmt对象名一定腰围gmt才行) gmtdf.find &lt;- find_pathway(&quot;^Ferr&quot;) gsea.single &lt;- DEG_runGSEA(genelist = genelist, gmt_set=gmtdf.find, pic.save=T, outdir = &quot;./gsea.ytb3/&quot;, filename = &quot;fer_taget&quot;) 3.2.3 GSEA官方软件 自行搜素方法，网络上有大量图文教程 … "],["visual.html", "4 差异及富集分析可视化专题", " 4 差异及富集分析可视化专题 On the way … "],["rnaseq-rsubread.html", "5 RNAseq上游流程", " 5 RNAseq上游流程 On the way … "],["multi-omics.html", "6 多组学", " 6 多组学 On the way "],["cuttag.html", "7 CUT&amp;TAG", " 7 CUT&amp;TAG On the way … "],["scRNA.html", "8 单细胞分析", " 8 单细胞分析 On the way … "],["spatial.html", "9 空间转录组", " 9 空间转录组 On the way … "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DEG_prepareData.S3.R
\name{DEG_prepareData}
\alias{DEG_prepareData}
\alias{DEG_prepareData.default}
\alias{DEG_prepareData.DEeset}
\alias{DEG_prepareData.XENA}
\title{S3 general function DEG_prepareData()}
\usage{
DEG_prepareData(...)

\method{DEG_prepareData}{default}(
  eset_file = "gene_count.csv",
  eset.islog = F,
  id_dot = F,
  col.by = "ID",
  col.del = NULL,
  auto.del.character = T,
  group_file,
  annot_trans = T,
  f_mark = "diff",
  is.human = T,
  orgDb = "org.Mm.eg.db",
  fromType = "ENSEMBL",
  toType = c("SYMBOL", "UNIPROT"),
  oop = FALSE,
  oop.group.suffix1 = "01A",
  oop.group.suffix2 = "11A",
  oop.group.group1 = "Tumor",
  oop.group.group2 = "Normal",
  oop.group.method = 1
)

\method{DEG_prepareData}{DEeset}(obj, f_mark = "DE")

\method{DEG_prepareData}{XENA}(
  obj,
  eset.islog = T,
  id_dot = T,
  col.by = "Ensembl_ID",
  col.del = NULL,
  auto.del.character = T,
  group_file,
  annot_trans = T,
  f_mark = "diff",
  is.human = T,
  orgDb = "org.Mm.eg.db",
  fromType = "ENSEMBL",
  toType = c("SYMBOL", "UNIPROT"),
  oop = T,
  oop.group.suffix1 = "01A",
  oop.group.suffix2 = "11A",
  oop.group.group1 = "Tumor",
  oop.group.group2 = "Normal",
  oop.group.method = 1
)
}
\arguments{
\item{...}{general funciton}

\item{eset_file}{character, the exps data file name, default: "gene_count.csv"}

\item{eset.islog}{logical, if the eset have been log2, default is F, meaning the eset data is not log2}

\item{id_dot}{logical, if the id column is ensemble id with dot, ex.ESEMxxxx.3}

\item{col.by}{character, delete the duplicate by this column}

\item{col.del}{character, manually delete some column}

\item{auto.del.character}{logical, if auto delete the column those class is character}

\item{group_file}{the group data file name, such as: "group.csv", if the param group_file is missing and oop = T this function will use DEeset$updateGroup() method}

\item{annot_trans}{logical, do the eset need be annot to symbol? if the datafame's first coloumn is not offical symbol, you can set to TRUE.}

\item{f_mark}{character a analysis mark(optional), default: "DE"}

\item{is.human}{logical, default is True, if it is True, the param orgDB,fromTyp and toType will be ignore}

\item{orgDb}{character, annotation db, ex. "org.Mm.eg.db"}

\item{fromType}{character, eset id column type}

\item{toType}{character, the annot result}

\item{oop}{logical, if use oop flow}

\item{oop.group.suffix1}{character, default 01A, eset's name end with 01A will use as group Tumor, DEeset$updateGroup()}

\item{oop.group.suffix2}{character, default 01A, eset's name end with 11A will use as group Normal, DEeset$updateGroup()}

\item{oop.group.group1}{character, default Tumor, eset's name end with 01A will use as group Tumor, DEeset$updateGroup()}

\item{oop.group.group2}{character, default Normal, eset's name end with 01A will use as group Normal, DEeset$updateGroup()}

\item{oop.group.method}{number, default is 1, \cr
if method is not 1 will use the existed self$group to make eset2}

\item{obj}{obeject the object DEeset}
}
\value{
lists

list

list
}
\description{
S3 general function DEG_prepareData(), prepare the data that LZ diff analysis need,\cr
return a list(eset=xx, group=xx, f_mark="xx")\cr
DEG_prepareData.default default method \cr
DEG_prepareData.DEeset  DEeset method\cr
DEG_prepareData.XENA xena method
}
\examples{
# read from XENABD object, oop  ============
# DEeset <- DEG_prepareData(XENADB,
#                           id_dot = T, col.by = "Ensembl_ID",
#                           col.del=NULL, auto.del.character=T,
#                           annot_trans=T, f_mark="diff",
#                           oop = T,
#                           oop.group.suffix1 = "01A",
#                           oop.group.suffix2 = "11A",
#                           oop.group.endT = "Tumor",
#                           oop.group.endF = "Normal")
#
# read from local file, oop ============
# test <- DEG_prepareData(eset_file="D:/TCGA.counts.tsv.gz",
#                         id_dot = T, col.by = "Ensembl_ID",
#                         col.del=NULL, auto.del.character=T,
#                         annot_trans=T, f_mark="diff",
#                         oop = T,
#                         oop.group.suffix1 = "01A",
#                         oop.group.suffix2 = "11A",
#                         oop.group.endT = "Tumor",
#                         oop.group.endF = "Normal")
#
# read frome local file(eset, group), no oop ============
# 仅当oop = F, 才会进入非oop流程, 此时需要指定group_flie参数才行。默认情况为F
# glist <- DEG_prepareData(eset_file = "data/eset.csv", #表达数据的相对路径
#                          group_file = "data/group.csv", #分组文件的相对路径
#                          id_dot = F,  # ESEM是否有点，有点设为T
#                          col.by = "ID",  # 基因名列的列名
#                          annot_trans = F, # 是否要注释，如果是EsembleID就需要设置为T
#                          f_mark = mark)
#' #' # exprset.group = list(eset, group, f_mark)
# ** 如果bacth=T，则group中第二列为batch列。
# ** 矩阵数据格式(数值型，整型)
# gene  | row1 | row2 | row3  | row4
# gene1 |  34  |  23  |  56   |  23
# gene2 |  35  |  23  |  12   |  23
# gene3 |  12  |  78  |  78   |  78
# ** 分组数据格式：需要组的行名 包含于 表达谱的列名 rownames(group) \%in\% colname(eset)
# Sample   |   Type    | BATCH
# rowname1 |   tumor   |  1
# rowname2 |   tumor   |  1
# rowname3 |   normal  |  2
# rowname4 |   normal  |  2
# if is.human = F, please set the orgDb and fromType correctly.
}
\author{
Jiang
}
